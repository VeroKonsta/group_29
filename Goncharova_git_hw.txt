JSON
 4. Создать внешний репозиторий c названием JSON. В вебе github где репозитории нажать New, ввести название, радиобаттон Public, чекбокс Add a README file, в завершении кнопка Create repository
 5. Клонировать репозиторий JSON на локальный компьютер. В репозитории Code, выбираем HTTPS, копируем ссылку, в gitbash пишем команду git clone и вставляем скопированную ссылку ссылку
 6. Внутри локального JSON создать файл “new.json”. 1) cd JSON  2) touch new.json
 7. Добавить файл под гит.   git add new.json
 8. Закоммитить файл. git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий. git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.  vim new.json , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq 
 11. Отправить изменения на внешний репозиторий. 1) git add . 2) git commit -m "add new.json" 3) git push
 12. Создать файл preferences.json  touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. vim preferences.json , нажать клавишу i и ввести данные, затем нажать esc и ввести команду :wq
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON  vim skills.json , нажать клавишу i и ввести данные, затем нажать esc и ввести команду :wq
 15. Отправить сразу 2 файла на внешний репозиторий. 1) git add . 2) git commit -m "add preferences.json , skills.json" 3) git push
 16. На веб интерфейсе создать файл bug_report.json. Add file - Create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON  1) В gitbash ввести команду git fetch 2) git pull


XML
 21. Создать внешний репозиторий c названием XML.  В вебе github где репозитории нажать New, ввести название, радиобаттон Public, чекбокс Add a README file, в завершении кнопка Create repository
 22. Клонировать репозиторий XML на локальный компьютер. В репозитории Code, выбираем HTTPS, копируем ссылку, в gitbash пишем команду git clone и вставляем скопированную ссылку ссылку
 23. Внутри локального XML создать файл “new.xml”. 1)cd XML 2) touch new.xml
 24. Добавить файл под гит. git add new.xml
 25. Закоммитить файл. git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий. git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.  vim new.xml , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq
 28. Отправить изменения на внешний репозиторий. 1) git add . 2) git commit -am "add modify new.xml" 3) git push
 29. Создать файл preferences.xml  touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. vim preferences.xml , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq 
 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML. vim skills.xml , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq
 32. Сделать коммит в одну строку. 1) git add . 2) git commit -m "create preferences.xml , skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий. git push
 34. На веб интерфейсе создать файл bug_report.xml. Add file - Create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. Edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit new file
 38. Синхронизировать внешний и локальный репозиторий XML. 1) В gitbash ввести команду git fetch 2) git pull
 

 TXT
 1. Создать внешний репозиторий c названием TXT. В вебе github где репозитории нажать New, ввести название, радиобаттон Public, чекбокс Add a README file, в завершении кнопка Create repository
 2. Клонировать репозиторий TXT на локальный компьютер. В репозитории Code, выбираем HTTPS, копируем ссылку, в gitbash пишем команду git clone и вставляем скопированную ссылку 
 3. Внутри локального TXT создать файл “new.txt”. 1) cd TXT 2) touch new.txt
 4. Добавить файл под гит. git add new.txt
 5. Закоммитить файл. git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.  vim new.txt , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq
 8. Отправить изменения на внешний репозиторий. 1) git add new.txt 2) git commit -am "add modify new.txt" 3) git push
 9. Создать файл preferences.txt. touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. vim preferences.txt , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq
 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT.  vim skills.txt , нажать клавишу i и внести изменения в файл, затем нажать esc и ввести команду  :wq
 12. Сделать коммит в одну строку. 1) git add . 2) git commit -m "create preferences.txt , skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий. git push
 14. На веб интерфейсе создать файл bug_report.txt.  Add file - Create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. Edit this file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit new file
 18. Синхронизировать внешний и локальный репозиторий TXT. 1) git fetch 2) git pull
